/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin.Expences;

import Class_Files.DB;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Buwaneka
 */
public class Sub_Frame_Expences extends javax.swing.JPanel {

    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    Calendar cal = Calendar.getInstance();
    String sys_date[] = dateFormat.format(cal.getTime()).split("-");
    Date Da;
    String Comdate;
    int accid;

    /**
     * Creates new form Sub_Frame_Expences
     */
    public Sub_Frame_Expences() throws ParseException {
        initComponents();
        date();
        Comdate = sys_date[0] + "-" + sys_date[1] + "-" + sys_date[2];
        Da = dateFormat.parse(Comdate.toString());
        jDateChooser1.setDate(Da);
        jDateChooser1.setEnabled(false);
        jButton5_pay.setEnabled(false);
        accid = 1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDiscription = new javax.swing.JTextArea();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton5_pay = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel16.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 51));
        jLabel16.setText("Date :");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(60, 70, 140, 30);

        jLabel10.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Rs");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(210, 240, 30, 30);

        txtAmount.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAmountKeyTyped(evt);
            }
        });
        jPanel1.add(txtAmount);
        txtAmount.setBounds(230, 240, 210, 28);

        jLabel11.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Description :");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(60, 120, 170, 30);

        txtDiscription.setColumns(20);
        txtDiscription.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        txtDiscription.setRows(5);
        txtDiscription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDiscriptionKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtDiscription);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(210, 120, 320, 100);

        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });
        jPanel1.add(jDateChooser1);
        jDateChooser1.setBounds(210, 70, 280, 30);

        jButton5_pay.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jButton5_pay.setText("Pay");
        jButton5_pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5_payActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5_pay);
        jButton5_pay.setBounds(560, 240, 160, 30);

        jTable1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Description", "Ammount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(40, 320, 980, 130);

        jButton6.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jButton6.setText("Veiw All");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(750, 460, 130, 30);

        jButton3.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jButton3.setText("Clear All");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(890, 460, 120, 30);

        jLabel12.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText("Ammount :");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(70, 240, 120, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1040, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyReleased

        try {

            try {

                if (txtAmount.getText().length() == 0) {
                    jButton5_pay.setEnabled(false);

                } else {

                    if (txtDiscription.getText().length() != 0
                            && txtAmount.getText().length() != 0) {
                        jButton5_pay.setEnabled(true);
                    }
                }

                //////////////////////////////////////////////
                if (evt.getKeyCode() == 10) {

                    jButton5_pay.grabFocus();
                }

                /////////////////////////////////////////
            } catch (NullPointerException e) {
            } catch (Exception e) {
                e.printStackTrace();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtAmountKeyReleased

    private void txtAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAmountKeyTyped

        try {
            System.gc();

            char c = evt.getKeyChar();
            if (!Character.isDigit(c)) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtAmountKeyTyped

    private void txtDiscriptionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiscriptionKeyReleased

        try {

            if (txtDiscription.getText().length() == 0) {
                jButton5_pay.setEnabled(false);

            } else {

                if (txtDiscription.getText().length() != 0
                        && txtAmount.getText().length() != 0) {
                    jButton5_pay.setEnabled(true);
                }
            }
//////////////////////////////////////////////
            if (evt.getKeyCode() == 10) {

                txtAmount.grabFocus();
            }

            /////////////////////////////////////////
        } catch (NullPointerException e) {
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtDiscriptionKeyReleased

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange

        try {

        } catch (NullPointerException e) {
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jDateChooser1PropertyChange
    String date;
    int Exp_id;
    private void jButton5_payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5_payActionPerformed

        try {

            ResultSet result = DB.search("SELECT MAX(Exp_Id) FROM expense");
            while (result.next()) {
                Exp_id = result.getInt("MAX(Exp_Id)");
                Exp_id++;
            }

            Calendar ca = jDateChooser1.getCalendar();
            int Year = ca.get(Calendar.YEAR);
            int Month = ca.get(Calendar.MONTH);
            Month++;
            int Day = ca.get(Calendar.DATE);

            date = Year + "-" + Month + "-" + Day;

            DB.sud("INSERT INTO expense(Exp_Date,Description,Amount,Status,Acount_Id)VALUES('" + date + "'"
                    + ",'" + txtDiscription.getText() + "' "
                    + ", '" + txtAmount.getText() + "' "
                    + ", '" + "On" + "' "
                    + ", '" + accid + "' )");

            table_add();
            Expence(Exp_id, txtAmount.getText());
            JOptionPane.showMessageDialog(this, "Expense Pay Sucessfully..!");
            EmtyTF();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton5_payActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        try {

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            ResultSet rs = Class_Files.DB.search("SELECT * FROM expense");

            while (rs.next()) {

                Vector v = new Vector();
                v.add(rs.getString("Exp_Date"));
                v.add(rs.getString("Description"));
                v.add(rs.getString("Amount"));
                dtm.addRow(v);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        try {
            txtAmount.setText("");
            txtDiscription.setText("");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5_pay;
    private javax.swing.JButton jButton6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextArea txtDiscription;
    // End of variables declaration//GEN-END:variables

    private void EmtyTF() {
        txtAmount.setText("");
        txtDiscription.setText("");
//        DefaultTableModel dtm =  (DefaultTableModel) jTable1.getModel();
//        dtm.setRowCount(0);
    }

    public void date() {

        //JDateChooser chooser = new JDateChooser();
        JTextFieldDateEditor editor = (JTextFieldDateEditor) jDateChooser1.getDateEditor();
        editor.setEditable(false);

    }

    private void table_add() {
        try {

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            Vector v = new Vector();
            v.add(date);
            v.add(txtDiscription.getText());
            v.add(txtAmount.getText());

            dtm.addRow(v);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    int cashid;

    private void Expence(int Exp_id, String text) {

        try {

            ResultSet result = DB.search("SELECT MAX(Cash_acc_Id) FROM cash_account");
            while (result.next()) {
                cashid = result.getInt("MAX(Cash_acc_Id)");
                ++cashid;
            }

            //Data Insert Into Cash table
            DB.sud("INSERT INTO cash_account(Cash_date,Cash_type,Descrip,Ammount,Status,Acount_Id)VALUES('" + Comdate + "'"
                    + ",'" + "Expense" + "'"
                    + ",'" + txtDiscription.getText() + "' "
                    + ",'" + text + "'"
                    + ",'" + "On" + "'"
                    + ",'" + accid + "')");
//Data Insert Into Cash Account Has Income table

            /*Load Cash id*/
            ////////////////
            DB.sud("INSERT INTO cash_account_has_expense(Cash_acc_Id,Exp_Id,Amount)VALUES('" + cashid + "'"
                    + ",'" + Exp_id + "'"
                    + ",'" + text + "' )");

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

}
