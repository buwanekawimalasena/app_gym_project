/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin.add_members;

import Class_Files.DB;
import com.mysql.jdbc.exceptions.MySQLIntegrityConstraintViolationException;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Buwaneka
 */
public class Members_Payments extends javax.swing.JPanel {

    int i;
    double fullp;
    int pack_id;
    Double Pack_price;
    double Full_Payment;
    int acc_id = 1;
    double Netpayment;
    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    Calendar cal = Calendar.getInstance();
    String sys_date[] = dateFormat.format(cal.getTime()).split("-");
    String Comdate;
    String Comdate2;
    int mid;
    int Accid;

    /**
     * Creates new form Members_Payments
     */
    public Members_Payments() {
        initComponents();
        jScrollPane3.setVisible(false);
        jList1.setVisible(false);
        txtTotal.setEditable(false);
        jButton5_pay.setEnabled(false);
        Comdate = sys_date[0] + "" + sys_date[1] + "" + sys_date[2];
        Comdate2 = sys_date[0] + "-" + sys_date[1] + "-" + sys_date[2];
        load_packages();
        date();
        Accid=1;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel9 = new javax.swing.JLabel();
        jButton5_clear_all = new javax.swing.JButton();
        txtaddmission = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        txtTotal = new javax.swing.JTextField();
        txtMember_name = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton5_pay = new javax.swing.JButton();
        jButton5_view_all = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jList1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 13)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jList1MousePressed(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jList1KeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jList1);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(240, 78, 260, 130);

        jLabel9.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Admission :");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(80, 130, 160, 30);

        jButton5_clear_all.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jButton5_clear_all.setText("Clear All");
        jButton5_clear_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5_clear_allActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5_clear_all);
        jButton5_clear_all.setBounds(720, 470, 130, 30);

        txtaddmission.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        txtaddmission.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtaddmissionKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtaddmissionKeyTyped(evt);
            }
        });
        jPanel1.add(txtaddmission);
        txtaddmission.setBounds(270, 130, 230, 28);

        jLabel17.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 51, 51));
        jLabel17.setText("Rs ");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(250, 130, 20, 30);

        jLabel10.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Package :");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(80, 90, 160, 30);

        jComboBox2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jComboBox2.setFocusable(false);
        jComboBox2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jComboBox2MousePressed(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox2);
        jComboBox2.setBounds(240, 90, 260, 30);

        txtTotal.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        txtTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTotalKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTotalKeyTyped(evt);
            }
        });
        jPanel1.add(txtTotal);
        txtTotal.setBounds(270, 170, 230, 28);

        txtMember_name.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        txtMember_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMember_nameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMember_nameKeyTyped(evt);
            }
        });
        jPanel1.add(txtMember_name);
        txtMember_name.setBounds(240, 50, 260, 28);

        jLabel16.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(51, 51, 51));
        jLabel16.setText("Member Name :");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(80, 50, 120, 30);

        jLabel18.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 51, 51));
        jLabel18.setText("Package  End Date  :");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(580, 90, 160, 30);

        jLabel19.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(51, 51, 51));
        jLabel19.setText("Rs ");
        jPanel1.add(jLabel19);
        jLabel19.setBounds(250, 170, 20, 30);

        jLabel21.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(51, 51, 51));
        jLabel21.setText("Package Start Date  :");
        jPanel1.add(jLabel21);
        jLabel21.setBounds(580, 50, 170, 30);

        jDateChooser2.setDateFormatString("yyyy-MM-dd");
        jDateChooser2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jDateChooser2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser2PropertyChange(evt);
            }
        });
        jPanel1.add(jDateChooser2);
        jDateChooser2.setBounds(730, 90, 200, 28);

        jDateChooser1.setDateFormatString("yyyy-MM-dd");
        jDateChooser1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });
        jPanel1.add(jDateChooser1);
        jDateChooser1.setBounds(730, 50, 200, 28);

        jTable1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 13)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member Name", "Package", "Admission", "Tota Ammount", "Start date", "End Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
        }

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(82, 260, 940, 200);

        jButton5_pay.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jButton5_pay.setText("Pay");
        jButton5_pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5_payActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5_pay);
        jButton5_pay.setBounds(820, 200, 160, 30);

        jButton5_view_all.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jButton5_view_all.setText("Veiw All Paymets");
        jButton5_view_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5_view_allActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5_view_all);
        jButton5_view_all.setBounds(860, 470, 160, 30);

        jLabel20.setFont(new java.awt.Font("Segoe UI Semilight", 0, 15)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 51, 51));
        jLabel20.setText("Total Ammount :");
        jPanel1.add(jLabel20);
        jLabel20.setBounds(80, 170, 120, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1040, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5_clear_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5_clear_allActionPerformed

        try {

            EmtyTF();
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            jButton5_pay.setEnabled(false);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton5_clear_allActionPerformed

    private void txtaddmissionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaddmissionKeyReleased

        try {
            /////

            if (txtaddmission.getText().length() != 0) {

                Full_Payment = Pack_price + Double.parseDouble(txtaddmission.getText());
                txtTotal.setText(Full_Payment + "");

                if (evt.getKeyCode() == 10) {
//                    txtpayment.grabFocus();

                }

            } else {
                txtTotal.setText("");

            }

            int date1 = jDateChooser2.getDate().toString().length();
            int date2 = jDateChooser1.getDate().toString().length();

            if (txtaddmission.getText().length() == 0) {
                jButton5_pay.setEnabled(false);

            } else {

                if (txtMember_name.getText().length() != 0
                        && jComboBox2.getSelectedIndex() != 0
                        && txtaddmission.getText().length() != 0
                        && txtTotal.getText().length() != 0
                        && date1 != 0
                        && date2 != 0) {
                    jButton5_pay.setEnabled(true);

                }

            }
            ///////

        } catch (NullPointerException n) {

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtaddmissionKeyReleased

    private void txtaddmissionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtaddmissionKeyTyped

        try {
            System.gc();

            char c = evt.getKeyChar();
            if (!Character.isDigit(c) || c == 32) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_txtaddmissionKeyTyped

    private void jComboBox2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox2MousePressed

    }//GEN-LAST:event_jComboBox2MousePressed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

        try {
//Load Package ID and PAckage price
            String month = jComboBox2.getSelectedItem().toString();

            ResultSet rs = DB.search("SELECT * FROM package_reg WHERE Package_Name = '" + month + "' ");

            while (rs.next()) {
                pack_id = rs.getInt("Package_Id");
                Pack_price = rs.getDouble("Price");
            }

            ////////////////////////////Set Full payment to payment Text feild
            if (jComboBox2.getSelectedIndex() != 0 && txtaddmission.getText().length() != 0) {

                //if (evt.getKeyCode() == 10) {
                Full_Payment = Pack_price + Double.parseDouble(txtaddmission.getText());
                txtTotal.setText(Full_Payment + "");
                //}

            } else {

                if (jComboBox2.getSelectedIndex() != 0) {
                    txtTotal.setText(Pack_price + "");
                } else {
                    txtTotal.setText("");
                    txtaddmission.setText("");
                }
            }

            ///validation
            int date1 = jDateChooser2.getDate().toString().length();
            int date2 = jDateChooser1.getDate().toString().length();

            if (jComboBox2.getSelectedIndex() == 0) {
                jButton5_pay.setEnabled(false);

            } else {

                if (txtMember_name.getText().length() != 0
                        && jComboBox2.getSelectedIndex() != 0
                        && txtaddmission.getText().length() != 0
                        && txtTotal.getText().length() != 0
                        && date1 != 0
                        && date2 != 0) {
                    jButton5_pay.setEnabled(true);

                }

            }

            /////////////////////////////////////////
            if (jComboBox2.getSelectedIndex() == 0) {
                txtTotal.setText("");
                txtaddmission.setText("");

            }

        } catch (NullPointerException n) {

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void txtTotalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalKeyReleased

        try {

            int date1 = jDateChooser2.getDate().toString().length();
            int date2 = jDateChooser1.getDate().toString().length();

            if (txtTotal.getText().length() == 0) {
                jButton5_pay.setEnabled(false);

            } else {

                if (txtMember_name.getText().length() != 0
                        && jComboBox2.getSelectedIndex() != 0
                        && txtaddmission.getText().length() != 0
                        && txtTotal.getText().length() != 0
                        && date1 != 0
                        && date2 != 0) {
                    jButton5_pay.setEnabled(true);

                }

            }

            /////////////////////////////////////////
            if (evt.getKeyCode() == 10) {
                jComboBox2.grabFocus();
            }
        } catch (NullPointerException n) {
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtTotalKeyReleased

    private void txtTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalKeyTyped

        try {
            System.gc();

            char c = evt.getKeyChar();
            if (!Character.isDigit(c) || c == 32) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtTotalKeyTyped

    private void txtMember_nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMember_nameKeyReleased

        try {

            if (!txtMember_name.getText().trim().equals("")) {
                ResultSet rs = Class_Files.DB.search("SELECT * FROM members_reg WHERE First_Name LIKE '" + txtMember_name.getText() + "%' || Last_Name LIKE '" + txtMember_name.getText() + "%' ");
                Vector v = new Vector();
                jList1.removeAll();

                while (rs.next()) {

                    String sts = rs.getString("Status");

                    if (sts.equals("On")) {

                        jScrollPane3.setVisible(true);
                        jList1.setVisible(true);

                        String Fn = rs.getString("First_Name");
                        String Ln = rs.getString("Last_Name");
                        v.add(Fn + " " + Ln);
                        jList1.setListData(v);

                    }

                }

            } else {
                jScrollPane3.setVisible(false);
                jList1.setVisible(false);

            }

            if (jList1.isVisible()) {
                if (evt.getKeyCode() == 40) {
                    jList1.grabFocus();
                }
            }

            ///////////////////////////////
            int date1 = jDateChooser2.getDate().toString().length();
            int date2 = jDateChooser1.getDate().toString().length();

            if (txtMember_name.getText().length() == 0) {
                jButton5_pay.setEnabled(false);

            } else {

                if (txtMember_name.getText().length() != 0
                        && jComboBox2.getSelectedIndex() != 0
                        && txtaddmission.getText().length() != 0
                        && txtTotal.getText().length() != 0
                        && date1 != 0
                        && date2 != 0) {
                    jButton5_pay.setEnabled(true);

                }

            }

            /////////////////////////////////////////
            ///Grab Focus
            if (evt.getKeyCode() == 10) {
                txtTotal.grabFocus();
            }

        } catch (NullPointerException n) {

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtMember_nameKeyReleased

    private void txtMember_nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMember_nameKeyTyped

        try {
            System.gc();

            char c = evt.getKeyChar();
            if (Character.isDigit(c)) {
                evt.consume();
                Toolkit.getDefaultToolkit().beep();

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtMember_nameKeyTyped

    private void jDateChooser2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser2PropertyChange

        try {

            int date1 = jDateChooser2.getDate().toString().length();
            int date2 = jDateChooser1.getDate().toString().length();

            if (date2 == 0) {
                jButton5_pay.setEnabled(false);

            } else {

                if (txtMember_name.getText().length() != 0
                        && jComboBox2.getSelectedIndex() != 0
                        && txtaddmission.getText().length() != 0
                        && txtTotal.getText().length() != 0
                        && date1 != 0
                        && date2 != 0) {
                    jButton5_pay.setEnabled(true);

                }

            }

        } catch (NullPointerException e) {
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jDateChooser2PropertyChange

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange

        try {

            int date1 = jDateChooser2.getDate().toString().length();
            int date2 = jDateChooser1.getDate().toString().length();

            if (date1 == 0) {
                jButton5_pay.setEnabled(false);

            } else {

                if (txtMember_name.getText().length() != 0
                        && jComboBox2.getSelectedIndex() != 0
                        && txtaddmission.getText().length() != 0
                        && txtTotal.getText().length() != 0
                        && date1 != 0
                        && date2 != 0) {
                    jButton5_pay.setEnabled(true);

                }

            }

        } catch (NullPointerException n) {

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jDateChooser1PropertyChange

    String date;
    String date1;
    long system_date = 0;
    long Star_date = 0;
    long End_date = 0;
    int Payid;

    private void jButton5_payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5_payActionPerformed

        try {

//            if (Double.parseDouble(txtTotal.getText()) < Double.parseDouble(txtpayment.getText())) {
//                JOptionPane.showMessageDialog(this, "Sorry your payments is grater than total ammount..!");
//            } else {
//______________________________________________________________________//
            //Gets jdatehooser getselected date
            Calendar ca = jDateChooser1.getCalendar();
            int Year = ca.get(Calendar.YEAR);
            int Month = ca.get(Calendar.MONTH);
            Month++;
            int Day = ca.get(Calendar.DATE);

            date = Year + "-" + Month + "-" + Day;

            String s1[] = date.split("-");

            if (Integer.parseInt(s1[1]) < 10) {
                s1[1] = "0" + s1[1];
            }
            if (Integer.parseInt(s1[2]) < 10) {
                s1[2] = "0" + s1[2];
            }

            String cd1 = s1[0] + "" + s1[1] + "" + s1[2];

            Star_date = Long.parseLong(cd1);

//____________________________________________________________________________//
//Get System date
            String d = sys_date[0] + "" + sys_date[1] + "" + sys_date[2];
            system_date = Long.parseLong(d);

//_________________________________________________________________________//
            Calendar ca1 = jDateChooser2.getCalendar();
            int Year1 = ca1.get(Calendar.YEAR);
            int Month1 = ca1.get(Calendar.MONTH);
            Month1++;
            int Day1 = ca1.get(Calendar.DATE);

            date1 = Year1 + "-" + Month1 + "-" + Day1;

            String s2[] = date1.split("-");

            if (Integer.parseInt(s2[1]) < 10) {
                s2[1] = "0" + s2[1];
            }
            if (Integer.parseInt(s2[2]) < 10) {
                s2[2] = "0" + s2[2];
            }

            String cd2 = s2[0] + "" + s2[1] + "" + s2[2];

            End_date = Long.parseLong(cd2);

//____________________________________________________________________________//
            //Cheack package start date less than System date
            if (Star_date < system_date) {
                JOptionPane.showMessageDialog(this, "Sorry package start date cannot less than package system date..!");
            } else {

                //_________________________________________________________________________
                // cheack both dates are not equal
                if (Star_date == End_date) {
                    JOptionPane.showMessageDialog(this, "Sorry Both Dates are cannot equal..!! ");

                } else {
                    //________________________________________________________________________
                    //Cheack End date less than Start Date
                    if (End_date < Star_date) {
                        JOptionPane.showMessageDialog(this, "Sorry package end date cannot less than package start date..!");

                    } else {
//________________________________________________________________________________________________________________________________________________________//
                        byte a = 0;
                        String Name[] = txtMember_name.getText().split(" ");
                        ResultSet rs = DB.search("SELECT * FROM members_reg WHERE First_Name = '" + Name[0] + "' &&  Last_Name='" + Name[1] + "' ");
                        while (rs.next()) {
                            a = 1;
                            mid = rs.getInt("Mem_id");
                        }

                        if (a == 0) {
                            JOptionPane.showMessageDialog(this, "Cheak Members name..!");

                        } else {
//______________________________________________________________________________________________________________________________________//
                            // Search member already have payment 
                            byte c = 0;
                            long Computerdate = Long.parseLong(Comdate);
                            long package_ending = 0;
                            ResultSet rs1 = DB.search("SELECT * FROM payment WHERE Mem_id = '" + mid + "' ");
                            while (rs1.next()) {
                                c = 1;

                                String dat[] = rs1.getString("End_date").split("-");

                                if (Integer.parseInt(dat[1]) < 10) {
                                    dat[1] = "0" + dat[1];
                                }
                                if (Integer.parseInt(dat[2]) < 10) {
                                    dat[2] = "0" + dat[2];
                                }

                                String passdate = dat[0] + "" + dat[1] + "" + dat[2];
                                package_ending = Long.parseLong(passdate);
                            }

                            ////
                            ResultSet result = DB.search("SELECT MAX(Payment_Id) FROM payment ");
                            while (result.next()) {
                                Payid = result.getInt("MAX(Payment_Id)");
                                ++Payid;
                            }

                            ////
                            //If New Payemnt
                            if (c == 0) {

                                DB.sud("INSERT INTO payment(Mem_Id,Name,Package_Id,Admission,T_ammount,Start_date,End_date,Acount_Id)VALUES('" + mid + "'"
                                        + ", '" + txtMember_name.getText() + "' "
                                        + ", '" + pack_id + "'"
                                        + ", '" + txtaddmission.getText() + "' "
                                        + ", '" + txtTotal.getText() + "'"
                                        + ", '" + date + "'"
                                        + " , '" + date1 + "'"
                                        + ", '" + acc_id + "')");

                                income(Payid, txtTotal.getText(), Comdate2);
                                tabelAdd();
                                JOptionPane.showMessageDialog(this, txtMember_name.getText() + "''s'" + " payment successfully");

                                EmtyTF();

                            } else {

                                if (package_ending <= Computerdate) {

                                    DB.sud("INSERT INTO payment(Mem_Id,Name,Package_Id,Admission,T_ammount,Start_date,End_date,Acount_Id)VALUES('" + mid + "'"
                                            + ", '" + txtMember_name.getText() + "' "
                                            + ", '" + pack_id + "'"
                                            + ", '" + txtaddmission.getText() + "' "
                                            + ", '" + txtTotal.getText() + "' "
                                            + ", '" + date + "'"
                                            + " , '" + date1 + "'"
                                            + ", '" + acc_id + "')");
                                    income(Payid, txtTotal.getText(), Comdate2);
                                    tabelAdd();
                                    JOptionPane.showMessageDialog(this, txtMember_name.getText() + "''s'" + " payment successfully");

                                    EmtyTF();

                                } else {
                                    JOptionPane.showMessageDialog(this, "This " + txtMember_name.getText() + " member package is not expire..!");
                                    EmtyTF();
                                }

                            }

                        }
//___________________________________________________________________________________________________________________________________//
                    }

//___________________________________________________________________________________________________________________________________//
                }

//___________________________________________________________________________________________________________________________________//
            }

//___________________________________________________________________________________________________________________________________//
            //}
        } catch (NumberFormatException e) {

        } catch (ArrayIndexOutOfBoundsException a) {
            JOptionPane.showMessageDialog(this, "Cheak Members name..!");
        } catch (NullPointerException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton5_payActionPerformed

    private void jButton5_view_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5_view_allActionPerformed

        try {

            ResultSet rs = DB.search("SELECT * FROM payment");
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {

                Vector v = new Vector();
                v.add(rs.getString("Name"));

                ResultSet rs2 = DB.search("SELECT Package_Name FROM package_reg WHERE Package_Id= '" + rs.getInt("Package_Id") + "' ");
                while (rs2.next()) {
                    v.add(rs2.getString("Package_Name"));
                }

                v.add(rs.getString("Admission"));
                v.add(rs.getString("T_ammount"));
                v.add(rs.getString("Start_date"));
                v.add(rs.getString("End_date"));

                dtm.addRow(v);

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton5_view_allActionPerformed

    private void jList1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MousePressed

        try {
            System.gc();
            if (evt.getClickCount() == 2) {
                txtMember_name.setText(jList1.getSelectedValue().toString());
                m(jList1.getSelectedValue().toString());
                jScrollPane3.setVisible(false);
                jList1.setVisible(false);

            }

        } catch (NullPointerException n) {
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jList1MousePressed

    private void jList1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyReleased

        try {
            System.gc();
            if (evt.getKeyCode() == 10) {
                txtMember_name.setText(jList1.getSelectedValue().toString());
                m(jList1.getSelectedValue().toString());
                jScrollPane3.setVisible(false);
                jList1.setVisible(false);

            }
        } catch (NullPointerException e) {

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jList1KeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton5_clear_all;
    private javax.swing.JButton jButton5_pay;
    private javax.swing.JButton jButton5_view_all;
    private javax.swing.JComboBox jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtMember_name;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtaddmission;
    // End of variables declaration//GEN-END:variables

    private void tabelAdd() throws Exception {

        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        Vector v = new Vector();
        v.add(txtMember_name.getText());
        v.add(jComboBox2.getSelectedItem());
        v.add(txtaddmission.getText());
        v.add(txtTotal.getText());
        v.add(date);
        v.add(date1);

        dtm.addRow(v);

    }

    private void EmtyTF() {

        txtMember_name.setText("");
        jComboBox2.setSelectedIndex(0);
        txtaddmission.setText("");
        txtTotal.setText("");
        jDateChooser1.setDate(null);
        jDateChooser2.setDate(null);
        jButton5_pay.setEnabled(false);
    }

    private void m(String Name) {

        try {

            byte a = 0;
            ResultSet rs = DB.search("SELECT * FROM payment WHERE Name= '" + Name + "'");
            while (rs.next()) {
                a = 1;
            }
            if (a == 1) {
                txtaddmission.setText("0");
                txtaddmission.setEditable(false);

                if (jComboBox2.getSelectedIndex() == 0) {
                    txtTotal.setText("");
                } else {
                    txtTotal.setText(Pack_price + "");
                }

            } else {
                //txtaddmission.setText("");
                txtaddmission.setEditable(true);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }
    int cashid;

    private void income(int Payid, String text, String Comdate2) {

        try {

            ResultSet result = DB.search("SELECT MAX(Cash_acc_Id) FROM cash_account");
            while (result.next()) {
                cashid = result.getInt("MAX(Cash_acc_Id)");
                ++cashid;
            }

//Data Insert Into Cash table
            DB.sud("INSERT INTO cash_account(Cash_date,Cash_type,Descrip,Ammount,Status,Acount_Id)VALUES('" + Comdate2 + "'"
                    + ",'" + "Income" + "' "
                    + ",'"+txtMember_name.getText()+" "+jComboBox2.getSelectedItem() +"' "
                    + ",'" + text + "'"
                    + ",'" + "On" + "' , '"+Accid+"' )");
//Data Insert Into Cash Account Has Income table

            /*Load Cash id*/
            ////////////////
            DB.sud("INSERT INTO cash_account_has_income(Cash_acc_Id,Payment_Id,Ammount)VALUES('" + cashid + "'"
                    + ",'" + Payid + "'"
                    + ",'" + text + "' )");

        } catch (MySQLIntegrityConstraintViolationException m) {
            m.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void load_packages() {

        try {

            ResultSet rs = DB.search("SELECT * FROM package_reg");
            DefaultComboBoxModel dcm = (DefaultComboBoxModel) jComboBox2.getModel();
            dcm.addElement(" ");
            while (rs.next()) {
                dcm.addElement(rs.getString("Package_Name"));

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void date() {

        //JDateChooser chooser = new JDateChooser();
        JTextFieldDateEditor editor = (JTextFieldDateEditor) jDateChooser1.getDateEditor();
        editor.setEditable(false);

        JTextFieldDateEditor editor1 = (JTextFieldDateEditor) jDateChooser2.getDateEditor();
        editor1.setEditable(false);

    }
}
